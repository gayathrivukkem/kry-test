plugins {
  id 'java'
  id 'application'
  id 'com.github.johnrengelman.shadow' version '2.0.4'
  id 'io.dotinc.vertx-codegen-plugin' version '0.1.0'
}
ext {
  vertxVersion = '3.6.3'
  junitJupiterEngineVersion = '5.2.0'
}

repositories {
  mavenLocal()
  jcenter()
  mavenCentral()
}

group = 'se.kry'
version = '1.0.0-SNAPSHOT'

sourceCompatibility = '1.8'
mainClassName = 'io.vertx.core.Launcher'

def mainVerticleName = 'se.kry.codetest.MainVerticle'
def watchForChange = 'src/**/*'
def doOnChange = './gradlew classes'

dependencies {

  implementation "io.vertx:vertx-core:$vertxVersion"
  implementation "io.vertx:vertx-core:$vertxVersion"
  implementation "io.vertx:vertx-web:$vertxVersion"
  implementation "io.vertx:vertx-web-client:$vertxVersion"
  compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.30.1'
  compile "io.vertx:vertx-jdbc-client:$vertxVersion"
  compile "io.vertx:vertx-web-client:$vertxVersion"
  compile "io.vertx:vertx-service-proxy:$vertxVersion"
  compile "io.vertx:vertx-codegen:3.9.0:processor"
  compile "io.vertx:vertx-service-proxy:3.9.0"

  testImplementation "io.vertx:vertx-junit5:$vertxVersion"
  testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitJupiterEngineVersion")
}


shadowJar {
  classifier = 'fat'
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED'
  }
}

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}

task wrapper(type: Wrapper) {
  gradleVersion = '4.8'
}

task annotationProcessing(type: JavaCompile, group: 'build') { // codegen
  description 'Generates the stubs'
  options.incremental = false
  source = sourceSets.main.java
  classpath = configurations.compileClasspath
  destinationDir = project.file('src/main/generated')
  options.annotationProcessorPath = configurations.annotationProcessor
  options.debugOptions.debugLevel = "source,lines,vars"
  options.compilerArgs = [
          "-proc:only",
          "-processor", "io.vertx.codegen.CodeGenProcessor",
          "-Acodegen.output=${project.projectDir}/src/main"
  ]
}

sourceSets {
  main {
    java {
      srcDirs += 'src/main/generated'
    }
  }
}